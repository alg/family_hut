set :application, "your application"
set :repository,  "git://github.com/alg/family_hut.git"
set :rails_env,   "production"

set :scm, :git

role :web, "your domain"                   # Your HTTP server, Apache/etc
role :app, "your domain"                   # This may be the same as your `Web` server
role :db,  "your domain", :primary => true # This is where Rails migrations will run

set :user,                  "username"
set :runner,                "username"
set :use_sudo,              false

set :deploy_via,            :export

task :bundle_gems, :roles => :app do
  run "mkdir -p #{shared_path}/bundle && ln -s #{shared_path}/bundle #{release_path}/vendor/bundle"
  run "cd #{latest_release}; bundle install --deployment --without development test"
end

# Create uploads directory and link
task :deploy_shared, :roles => :app do
  run "cp #{shared_path}/config/database.yml #{latest_release}/config/database.yml"
  run "cp #{shared_path}/config/production_custom.rb #{latest_release}/config/environments/production_custom.rb"
  run "ln -s #{shared_path}/assets #{latest_release}/public/assets"
end

after "deploy:update_code", "deploy_shared"
after "deploy:update_code", "bundle_gems"
after "deploy:restart", "deploy:cleanup"

# Passenger tasks
namespace :deploy do
  desc "Restarting mod_rails with restart.txt"
  task :restart, :roles => :app, :except => { :no_release => true } do
    run "touch #{current_path}/tmp/restart.txt"
  end

  [:start, :stop].each do |t|
    desc "#{t} task is a no-op with mod_rails"
    task t, :roles => :app do ; end
  end
end
